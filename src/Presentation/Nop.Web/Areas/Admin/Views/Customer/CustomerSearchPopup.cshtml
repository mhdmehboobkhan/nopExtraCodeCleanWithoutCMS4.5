@model CustomerSearchModel

@using System.Globalization;
@using Nop.Core.Domain.Media

@{
    Layout = "_AdminPopupLayout";
    
    //page title
    ViewBag.PageTitle = T("Admin.Customers.Customers.Choose.Title").Text;
}

<div class="content-header clearfix">
    <h1 class="float-left">
        @T("Admin.Customers.Customers.Choose.Title")
    </h1>
    <div class="float-right">
        &nbsp;
    </div>
</div>

 <section class="content">
        <div class="container-fluid">
            <div class="form-horizontal">
                <div class="cards-group">
                    <div class="card card-default card-search card-popup">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group row">
                                        <div class="col-sm-5">
                                            <nop-label asp-for="SearchEmail" />
                                        </div>
                                        <div class="col-sm-7">
                                            <nop-editor asp-for="SearchEmail" />
                                        </div>
                                    </div>
                                    @if (Model.UsernamesEnabled)
                                    {
                                    <div class="form-group row">
                                        <div class="col-sm-5">
                                            <nop-label asp-for="SearchUsername" />
                                        </div>
                                        <div class="col-sm-7">
                                            <nop-editor asp-for="SearchUsername" />
                                        </div>
                                    </div>
                                    }
                                    <div class="form-group row">
                                        <div class="col-sm-5">
                                            <nop-label asp-for="SearchFirstName" />
                                        </div>
                                        <div class="col-sm-7">
                                            <nop-editor asp-for="SearchFirstName" />
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="col-sm-5">
                                            <nop-label asp-for="SearchLastName" />
                                        </div>
                                        <div class="col-sm-7">
                                            <nop-editor asp-for="SearchLastName" />
                                        </div>
                                    </div>
                                    @if (Model.DateOfBirthEnabled)
                                    {
                                    <div class="form-group row">
                                        <div class="col-sm-5">
                                            <nop-label asp-for="SearchDayOfBirth" />
                                        </div>
                                        <div class="col-sm-7">
                                            @{
                                            var monthOfBirthValues = new List<SelectListItem>
                                                ();
                                                monthOfBirthValues.Add(new SelectListItem { Text = T("Admin.Customers.Customers.List.SearchDateOfBirth.Month").Text, Value = "0" });
                                                for (var i = 1; i <= 12; i++)
                                                {
                                                monthOfBirthValues.Add(new SelectListItem { Text = i.ToString(CultureInfo.InvariantCulture), Value = i.ToString(CultureInfo.InvariantCulture) });
                                                }
                                                var dayOfBirthValues = new List<SelectListItem>
                                                    ();
                                                    dayOfBirthValues.Add(new SelectListItem { Text = T("Admin.Customers.Customers.List.SearchDateOfBirth.Day").Text, Value = "0" });
                                                    for (var i = 1; i <= 31; i++)
                                                    {
                                                    dayOfBirthValues.Add(new SelectListItem { Text = i.ToString(CultureInfo.InvariantCulture), Value = i.ToString(CultureInfo.InvariantCulture) });
                                                    }
                                                    }
                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            <nop-select asp-for="SearchMonthOfBirth" asp-items="@monthOfBirthValues" />
                                                        </div>
                                                        <div class="col-md-6">
                                                            <nop-select asp-for="SearchDayOfBirth" asp-items="@dayOfBirthValues" />
                                                        </div>
                                                    </div>
                                        </div>
                                    </div>
                                    }
                                </div>
                                <div class="col-sm-6">
                                    @if (Model.CompanyEnabled)
                                    {
                                        <div class="form-group row">
                                            <div class="col-sm-5">
                                                <nop-label asp-for="SearchCompany" />
                                            </div>
                                            <div class="col-sm-7">
                                                <nop-editor asp-for="SearchCompany" />
                                            </div>
                                        </div>
                                    }
                                    @if (Model.PhoneEnabled)
                                    {
                                        <div class="form-group row">
                                            <div class="col-sm-5">
                                                <nop-label asp-for="SearchPhone" />
                                            </div>
                                            <div class="col-sm-7">
                                                <nop-editor asp-for="SearchPhone" />
                                            </div>
                                        </div>
                                    }
                                    @if (Model.ZipPostalCodeEnabled)
                                    {
                                        <div class="form-group row">
                                            <div class="col-sm-5">
                                                <nop-label asp-for="SearchZipPostalCode" />
                                            </div>
                                            <div class="col-sm-7">
                                                <nop-editor asp-for="SearchZipPostalCode" />
                                            </div>
                                        </div>
                                    }
                                    <div class="form-group row">
                                        <div class="col-sm-5">
                                            <nop-label asp-for="SearchIpAddress" />
                                        </div>
                                        <div class="col-sm-7">
                                            <nop-editor asp-for="SearchIpAddress" />
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="col-sm-5">
                                            <nop-label asp-for="SelectedCustomerRoleIds" />
                                        </div>
                                        <div class="col-sm-7">
                                            <nop-select asp-for="SelectedCustomerRoleIds" asp-items="Model.AvailableCustomerRoles" asp-multiple="true" />
                                            <script>
                                                $(document).ready(function () {
                                                    var rolesIdsInput =
                                                        $('#@Html.IdFor(model => model.SelectedCustomerRoleIds)')
                                                            .data("kendoMultiSelect");
                                                    rolesIdsInput.setOptions({
                                                        autoClose: false,
                                                        filter: "contains"
                                                    });

                                                    @if (Model.AvailableCustomerRoles.Count == 0) {
                                                        <text>
                                                            rolesIdsInput.setOptions({
                                                                enable: false,
                                                            placeholder:
                                                            '@T("Admin.Catalog.Products.CustomerRoles.NoCustomerRolesAvailable")'
                                                                                                    });
                                                            rolesIdsInput._placeholder();
                                                            rolesIdsInput._enable();
                                                        </text>
                                                    }
                                                });
                                            </script>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-12">
                                    <button type="button" id="search-customers" class="btn btn-primary btn-search">
                                        <i class="fas fa-search"></i>
                                        @T("Admin.Common.Search")
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card card-default">
                    <div class="card-body">
                        @await Html.PartialAsync("Table", new DataTablesModel
                        {
                            Name = "customers-grid",
                            UrlRead = new DataUrl("CustomerList", "Customer", null),
                            SearchButtonId = "search-customers",
                            Length = Model.PageSize,
                            LengthMenu = Model.AvailablePageSizes,
                            Filters = new List<FilterParameter>
                            {
                                    new FilterParameter(nameof(Model.SelectedCustomerRoleIds)),
                                    new FilterParameter(nameof(Model.SearchEmail)),
                                    new FilterParameter(nameof(Model.SearchUsername)),
                                    new FilterParameter(nameof(Model.SearchFirstName)),
                                    new FilterParameter(nameof(Model.SearchLastName)),
                                    new FilterParameter(nameof(Model.SearchDayOfBirth)),
                                    new FilterParameter(nameof(Model.SearchMonthOfBirth)),
                                    new FilterParameter(nameof(Model.SearchCompany)),
                                    new FilterParameter(nameof(Model.SearchPhone)),
                                    new FilterParameter(nameof(Model.SearchZipPostalCode)),
                                    new FilterParameter(nameof(Model.SearchIpAddress)),
                            },
                            ColumnCollection = new List<ColumnProperty>
                            {
                                new ColumnProperty(nameof(CustomerModel.Id))
                                {
                                    Title = T("Admin.Common.Select").Text,
                                    Render = new RenderCustom("renderColumnSelectCustomer"),
                                    ClassName =  NopColumnClassDefaults.Button,
                                    Width = "50",
                                },
                                new ColumnProperty(nameof(CustomerModel.Email))
                                {
                                    Title = T("Admin.Customers.Customers.Fields.Email").Text
                                },
                                new ColumnProperty(nameof(CustomerModel.FullName))
                                {
                                    Title = T("Admin.Customers.Customers.Fields.FullName").Text
                                },
                                new ColumnProperty(nameof(CustomerModel.Active))
                                {
                                    Title = T("Admin.Customers.Customers.Fields.Active").Text,
                                    Width = "100",
                                    ClassName = NopColumnClassDefaults.CenterAll,
                                    Render = new RenderBoolean()
                                }
                            }
                        })
                        <script>
                            function renderGovermentIdPicture(data, type, row, meta) {
                                if(data == null || data == '')
                                    return '';

                                return '<img src="' + data + '">';
                            }
                            function renderColumnSelectCustomer(data, type, row, meta) {
                                return '<button type="button" onclick="selectCustomer(' + row.Id + ' )" class="btn btn-default">@T("Admin.Common.Select").Text</button>';
                            }
                            function selectCustomer(customerId) {
                                try {
                                    window.opener.document.getElementById('@(Context.Request.Query["customerIdInput"])').value = customerId;
                                    window.opener.document.getElementById('@(Context.Request.Query["btnId"])').click();
                                }
                                catch (e){}
                                window.close();
                            }
                        </script>
                    </div>
                </div>
        </div>
</div>
</section>